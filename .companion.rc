# 每次启动都要执行的配置文件，保证更新锁解锁，拷贝默认配置文件，同时通过SCREEN启动一些后台程序，运行各种脚本

export COMPANION_DIR=/home/pi/companion

# 拷贝有必要的默认配置文件，并删除文件名后的.default
cd $COMPANION_DIR/params

for default_param_file in *; do
    if [[ $default_param_file == *".param.default" ]]; then
        param_file="/home/pi/"$(echo $default_param_file | sed "s/.default//")
        if [ ! -e "$param_file" ]; then
            cp $default_param_file $param_file
        fi
    fi
done

# 如果.updating不是文件
if [ ! -f /home/pi/.updating ]; then
	# sudo -H 将HOME环境变量设为新身份的HOME环境变量 -u user 以指定的用户作为新身份运行
	# screen让一个或多个任务共享一个会话 -d yourname将制定的screen作业离线
    # -m 即使目前有已在作业中的screen作业，仍强制建立新的screeen作业 -S yourname指定作业名称
	sudo -H -u pi screen -dm -S mavproxy $COMPANION_DIR/scripts/start_mavproxy_telem_splitter.sh
	sudo -H -u pi $COMPANION_DIR/scripts/start_video.sh $(cat /home/pi/vidformat.param)
	sudo -H -u pi screen -dm -S webui $COMPANION_DIR/scripts/start_webui.sh
	sudo -H -u pi screen -dm -S webterminal $COMPANION_DIR/scripts/start_webterminal.sh
	sudo -H -u pi screen -dm -S commrouter $COMPANION_DIR/tools/comm_router.py
	sudo -H -u pi screen -dm -S audio $COMPANION_DIR/scripts/start_audio.sh
	sudo -H -u pi screen -dm -S file-manager node --harmony $COMPANION_DIR/br-webui/node_modules/node-file-manager/lib/index.js -p 7777 -d /
	sudo -H -u pi screen -dm -S nmearx $COMPANION_DIR/tools/nmea-receiver.py
	sudo -H -u pi screen -dm -S wldriver $COMPANION_DIR/tools/underwater-gps.py --ip=192.168.2.94 --port=80
else
	sudo -H -u pi echo 'UPDATE FAILED!' >> /home/pi/.update_log
	rm -f /home/pi/.updating
	# 如果.companion是目录
	if [ -d /home/pi/.companion ]; then
		rm -rf $COMPANION_DIR
		sudo -H -u pi cp -r /home/pi/.companion $COMPANION_DIR
	fi
	sudo -H -u pi echo 'Trying to run again...' >> /home/pi/.update_log
	# 如果失败会重新执行
	$COMPANION_DIR/.companion.rc
fi
